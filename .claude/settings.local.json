{
  "permissions": {
    "allow": [
      "mcp__serena__list_dir",
      "Bash(cat:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh repo create:*)",
      "Bash(git push:*)",
      "Bash(psql:*)",
      "Read(//Users/LenMiller/code/banno/responsive-tiles/**)",
      "Bash(node:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_take_screenshot",
      "Bash(pkill:*)",
      "Bash(npm run dev:*)",
      "mcp__playwright__browser_network_requests",
      "Bash(curl:*)",
      "mcp__chrome-devtools__navigate_page",
      "mcp__chrome-devtools__take_snapshot",
      "mcp__chrome-devtools__list_console_messages",
      "mcp__chrome-devtools__list_network_requests",
      "mcp__chrome-devtools__take_screenshot",
      "mcp__chrome-devtools__evaluate_script",
      "mcp__chrome-devtools__click",
      "SlashCommand(/sc:analyze \"the integration between frontend and backend, and what it will take to ensure we have all the fields needed\" --focus architecture --depth deep --format report)",
      "mcp__serena__get_current_config",
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__get_symbols_overview",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__chrome-devtools__get_network_request",
      "Bash(npm start)",
      "mcp__chrome-devtools__list_pages",
      "mcp__chrome-devtools__wait_for",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "mcp__chrome-devtools__new_page",
      "mcp__chrome-devtools__select_page",
      "Bash(nc localhost 3000)",
      "Bash(PORT=8080 npm start)",
      "Bash(npm run build:*)",
      "Bash(for file in src/services/*.ts)",
      "Bash(do sed -i '' 's|../../../../banno/responsive-tiles|../../../../../banno/responsive-tiles|g' \"$file\")",
      "Bash(done)",
      "Bash(do)",
      "mcp__serena__list_memories",
      "mcp__serena__read_memory",
      "mcp__context7__resolve-library-id",
      "Bash(npm test:*)",
      "Bash(npx prisma migrate dev:*)",
      "Read(//Users/LenMiller/code/banno/geezeo/app/controllers/**)",
      "Read(//Users/LenMiller/code/banno/geezeo/app/views/api/v2/users/accounts/**)",
      "Read(//Users/LenMiller/code/banno/geezeo/app/views/api/v2/users/**)",
      "Read(//Users/LenMiller/code/banno/geezeo/db/**)",
      "mcp__serena__write_memory",
      "Bash(npm install:*)",
      "Bash(npm run lint:*)",
      "Bash(npx tsc:*)",
      "Bash(timeout 30 npm test:*)",
      "Bash(for:*)",
      "mcp__context7__get-library-docs",
      "Bash(grep:*)",
      "Bash(awk:*)",
      "Bash(npx eslint:*)",
      "Read(///**)",
      "Bash(tee:*)",
      "Read(//private/tmp/**)",
      "Bash(npm uninstall:*)",
      "Bash(timeout 5 npm run cli)",
      "Bash(npm run cli:*)",
      "Bash(chmod:*)",
      "Bash(./tools/cli/test-cli.sh:*)",
      "Bash(ts-node:*)",
      "Bash(npx ts-node:*)",
      "Bash(npm run seed:*)",
      "Bash(find:*)",
      "mcp__serena__find_file",
      "Bash(perl:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(echo:*)",
      "mcp__serena__find_symbol",
      "mcp__serena__insert_after_symbol",
      "Read(//dev/**)",
      "Bash(/dev/null)",
      "Read(//private/etc/**)",
      "Bash(timeout 30 npm run cli:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiIxIiwiYXVkIjoicGZtLmJhY2tlbmQuc2ltdWxhdG9yLmNvbSIsInN1YiI6IjQ0MyIsImlhdCI6MTc1OTg4MzAzNCwiZXhwIjoxNzU5ODgzOTM0fQ.KXAZmxSpjzmEMrodN_E0lM19hYuKFpyVqb45eJkrn7A\" curl -s -H \"Authorization: Bearer $TOKEN\" http://pfm.backend.simulator.com:3000/api/v2/users/443/accounts/all)",
      "Bash(brew install:*)",
      "Bash(caddy validate:*)",
      "Bash([ -f dist/index.js ])",
      "Bash(sudo lsof:*)",
      "Bash(sudo:*)",
      "Bash(xargs:*)",
      "Bash(pgrep:*)",
      "Bash(caddy stop:*)",
      "Bash(open:*)",
      "Bash(screencapture:*)",
      "Read(//Users/LenMiller/Library/Application Support/Caddy/pki/authorities/local/**)",
      "Bash(security find-certificate:*)",
      "SlashCommand(/sc:research \"VS Code debugging Node.js TypeScript with Caddy reverse proxy and nvm - best practices, configurations, workflows, and troubleshooting\" --depth exhaustive)",
      "mcp__tavily__tavily-search",
      "Bash(git branch:*)"
    ],
    "deny": [],
    "ask": []
  }
}
